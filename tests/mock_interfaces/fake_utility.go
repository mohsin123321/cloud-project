// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mohsin123321/cloud-project/utility (interfaces: UtilityInterface)

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUtilityInterface is a mock of UtilityInterface interface.
type MockUtilityInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUtilityInterfaceMockRecorder
}

// MockUtilityInterfaceMockRecorder is the mock recorder for MockUtilityInterface.
type MockUtilityInterfaceMockRecorder struct {
	mock *MockUtilityInterface
}

// NewMockUtilityInterface creates a new mock instance.
func NewMockUtilityInterface(ctrl *gomock.Controller) *MockUtilityInterface {
	mock := &MockUtilityInterface{ctrl: ctrl}
	mock.recorder = &MockUtilityInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUtilityInterface) EXPECT() *MockUtilityInterfaceMockRecorder {
	return m.recorder
}

// ParseBody mocks base method.
func (m *MockUtilityInterface) ParseBody(arg0 io.ReadCloser, arg1 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ParseBody", arg0, arg1)
}

// ParseBody indicates an expected call of ParseBody.
func (mr *MockUtilityInterfaceMockRecorder) ParseBody(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseBody", reflect.TypeOf((*MockUtilityInterface)(nil).ParseBody), arg0, arg1)
}
