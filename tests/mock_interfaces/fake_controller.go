// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mohsin123321/cloud-project/controller (interfaces: ControllerInterface)

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockControllerInterface is a mock of ControllerInterface interface.
type MockControllerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockControllerInterfaceMockRecorder
}

// MockControllerInterfaceMockRecorder is the mock recorder for MockControllerInterface.
type MockControllerInterfaceMockRecorder struct {
	mock *MockControllerInterface
}

// NewMockControllerInterface creates a new mock instance.
func NewMockControllerInterface(ctrl *gomock.Controller) *MockControllerInterface {
	mock := &MockControllerInterface{ctrl: ctrl}
	mock.recorder = &MockControllerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockControllerInterface) EXPECT() *MockControllerInterfaceMockRecorder {
	return m.recorder
}

// InsertData mocks base method.
func (m *MockControllerInterface) InsertData(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InsertData", arg0, arg1)
}

// InsertData indicates an expected call of InsertData.
func (mr *MockControllerInterfaceMockRecorder) InsertData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertData", reflect.TypeOf((*MockControllerInterface)(nil).InsertData), arg0, arg1)
}
