// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mohsin123321/cloud-project/database (interfaces: DatabaseInterface)

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/mohsin123321/cloud-project/model"
)

// MockDatabaseInterface is a mock of DatabaseInterface interface.
type MockDatabaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseInterfaceMockRecorder
}

// MockDatabaseInterfaceMockRecorder is the mock recorder for MockDatabaseInterface.
type MockDatabaseInterfaceMockRecorder struct {
	mock *MockDatabaseInterface
}

// NewMockDatabaseInterface creates a new mock instance.
func NewMockDatabaseInterface(ctrl *gomock.Controller) *MockDatabaseInterface {
	mock := &MockDatabaseInterface{ctrl: ctrl}
	mock.recorder = &MockDatabaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseInterface) EXPECT() *MockDatabaseInterfaceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockDatabaseInterface) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockDatabaseInterfaceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDatabaseInterface)(nil).Close))
}

// InsertData mocks base method.
func (m *MockDatabaseInterface) InsertData(arg0 model.Data) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InsertData", arg0)
}

// InsertData indicates an expected call of InsertData.
func (mr *MockDatabaseInterfaceMockRecorder) InsertData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertData", reflect.TypeOf((*MockDatabaseInterface)(nil).InsertData), arg0)
}
